apiVersion: batch/v1
kind: Job
metadata:
  name: training
  labels:
    app.kubernetes.io/managed-by: {{.Release.Service | quote }}
    app.kubernetes.io/instance: {{.Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    helm.sh/chart: "{{.Chart.Name}}-{{.Chart.Version}}"
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  template:
    metadata:
      name: "{{.Release.Name}}"
      labels:
        app.kubernetes.io/managed-by: {{.Release.Service | quote }}
        app.kubernetes.io/instance: {{.Release.Name | quote }}
        helm.sh/chart: "{{.Chart.Name}}-{{.Chart.Version}}"
    spec:
      imagePullSecrets:
       - name: "{{ .Values.imagePullSecrets }}"
      hostNetwork: true
      restartPolicy: "Never"
      nodeSelector:
        kubernetes.io/hostname: "{{ .Values.nodeselector.trainingnode }}"
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000 
      containers:
        - name: w4-training
          image: "{{.Values.image.baseimage}}"
          imagePullPolicy: "IfNotPresent"
          command: ["/bin/sh"]
          args: ["-c", "cd /home/training && ls -l run_qat.sh && ./run_qat.sh"]
          env:
            {{- range $key, $val := .Values.trainingenv }}
             - name: {{ $key }}
               value: {{ $val | quote}}
            {{- end }}
             
          volumeMounts:
            - name: training
              mountPath: /home/training
      volumes:
        - name: training
          hostPath:
             path: {{.Values.mountpath.trainingvolume}}
        

